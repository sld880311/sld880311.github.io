<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>一蓑烟雨任平生</title>
  
  <subtitle>个人成长日记</subtitle>
  <link href="https://www.sunliaodong.cn/atom.xml" rel="self"/>
  
  <link href="https://www.sunliaodong.cn/"/>
  <updated>2021-02-05T00:56:35.974Z</updated>
  <id>https://www.sunliaodong.cn/</id>
  
  <author>
    <name>Theodore Sun</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>MySQL之日志-扩展</title>
    <link href="https://www.sunliaodong.cn/2021/02/05/MySQL%E4%B9%8B%E6%97%A5%E5%BF%97-%E6%89%A9%E5%B1%95/"/>
    <id>https://www.sunliaodong.cn/2021/02/05/MySQL%E4%B9%8B%E6%97%A5%E5%BF%97-%E6%89%A9%E5%B1%95/</id>
    <published>2021-02-05T00:23:29.000Z</published>
    <updated>2021-02-05T00:56:35.974Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;数据日志文件比对&quot;&gt;&lt;a href=&quot;#数据日志文件比对&quot; class=&quot;headerlink&quot; title=&quot;数据日志文件比对&quot;&gt;&lt;/a&gt;数据日志文件比对&lt;/h2&gt;&lt;h3 id=&quot;ib-logfile与log-bin区别&quot;&gt;&lt;a href=&quot;#ib-logfile与log-bin区别&quot; class=&quot;headerlink&quot; title=&quot;ib_logfile与log-bin区别&quot;&gt;&lt;/a&gt;ib_logfile与log-bin区别&lt;/h3&gt;&lt;style type=&quot;text/css&quot;&gt;
.tg  {border-collapse:collapse;border-spacing:0;}
.tg td{font-family:Arial, sans-serif;font-size:14px;padding:10px 5px;border-style:solid;border-width:1px;overflow:hidden;word-break:normal;border-color:black;}
.tg th{font-family:Arial, sans-serif;font-size:14px;font-weight:normal;padding:10px 5px;border-style:solid;border-width:1px;overflow:hidden;word-break:normal;border-color:black;}
.tg .tg-0lax{text-align:left;vertical-align:top}
&lt;/style&gt;
&lt;table class=&quot;tg&quot;&gt;
  &lt;tr&gt;
    &lt;td class=&quot;tg-0lax&quot;&gt;ib_logfile&lt;/td&gt;
    &lt;td class=&quot;tg-0lax&quot;&gt;
        记录系统的回滚，重做日志（在你修改数据之前，会先把 修改的操作 作为日志先记录下来）&lt;br&gt;
        记录文件的物理更改&lt;br&gt;
        记录的是redo log和undo log（应该记录在ibdata1中）的信息，这里记录的基本是commit之前的数据
    &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td class=&quot;tg-0lax&quot;&gt;mysql-bin.******&lt;/td&gt;
    &lt;td class=&quot;tg-0lax&quot;&gt;
        记录系统的所有更新记录，数据库的更细日志，记录的是逻辑更改&lt;br&gt;
        主从：mysql会把日志发送到slave，salve会接收日志，然后解析日志，把里面的sql语句重新应用到数据库里，于是就能同步数据了&lt;br&gt;
        记录的是已经执行完毕的对数据库的dml和ddl信息，这里记录的基本是commit之后的数据信息。
    &lt;/td&gt;
  &lt;/tr&gt;
&lt;/table&gt;</summary>
    
    
    
    <category term="数据库" scheme="https://www.sunliaodong.cn/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    <category term="MySQL" scheme="https://www.sunliaodong.cn/categories/MySQL/"/>
    
    
    <category term="MySQL" scheme="https://www.sunliaodong.cn/tags/MySQL/"/>
    
    <category term="日志" scheme="https://www.sunliaodong.cn/tags/%E6%97%A5%E5%BF%97/"/>
    
  </entry>
  
  <entry>
    <title>MySQL之日志-中继日志</title>
    <link href="https://www.sunliaodong.cn/2021/02/05/MySQL%E4%B9%8B%E6%97%A5%E5%BF%97-%E4%B8%AD%E7%BB%A7%E6%97%A5%E5%BF%97/"/>
    <id>https://www.sunliaodong.cn/2021/02/05/MySQL%E4%B9%8B%E6%97%A5%E5%BF%97-%E4%B8%AD%E7%BB%A7%E6%97%A5%E5%BF%97/</id>
    <published>2021-02-05T00:23:20.000Z</published>
    <updated>2021-02-05T00:42:46.994Z</updated>
    
    
    <summary type="html">&lt;p&gt;中继日志用于主从复制架构中的从服务器上，从服务器的 slave 进程从主服务器处获取二进制日志的内容并写入中继日志，然后由 IO 进程读取并执行中继日志中的语句。在复制过程中产生的日志一个线程读取别人的二进制日志,存到本地叫做中继日志,然后本地在开启一个线程去读取中继日志在本地做回放,就完成了数据的同步&lt;/p&gt;</summary>
    
    
    
    <category term="数据库" scheme="https://www.sunliaodong.cn/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    <category term="MySQL" scheme="https://www.sunliaodong.cn/categories/MySQL/"/>
    
    
    <category term="MySQL" scheme="https://www.sunliaodong.cn/tags/MySQL/"/>
    
    <category term="中继日志" scheme="https://www.sunliaodong.cn/tags/%E4%B8%AD%E7%BB%A7%E6%97%A5%E5%BF%97/"/>
    
  </entry>
  
  <entry>
    <title>MySQL之日志-事务日志</title>
    <link href="https://www.sunliaodong.cn/2021/02/05/MySQL%E4%B9%8B%E6%97%A5%E5%BF%97-%E4%BA%8B%E5%8A%A1%E6%97%A5%E5%BF%97/"/>
    <id>https://www.sunliaodong.cn/2021/02/05/MySQL%E4%B9%8B%E6%97%A5%E5%BF%97-%E4%BA%8B%E5%8A%A1%E6%97%A5%E5%BF%97/</id>
    <published>2021-02-05T00:23:05.000Z</published>
    <updated>2021-02-05T00:41:33.616Z</updated>
    
    
    <summary type="html">&lt;p&gt;MySQL会最大程度的利用缓存，从而提高数据的访问效率。那么换一句话来说，任何高性能的系统都必须利用到缓存，从各个层面来讲，缓存都发挥了巨大的作用。再上升到一个高度提炼一下：缓存和队列是实现高性能的必走之路。那么对于数据库来说这个却是个很棘手的问题，要保证数据更高效率的读取和存储，所以要利用到缓存。但是要保证数据的一致性，则必须保证所有的数据都必须准确无误的存储到数据库中，及时发生意外，也要保证数据可恢复。我们知道InnoDB是一个事务安全的存储引擎，而一致性是事务ACID中的一个重要特性。InnoDB存储引擎主要是通过InnoDB事务日志实现数据一致性的，InnoDB事务日志包括重做（redo、循环写入）日志，以及回滚（undo）日志。&lt;/p&gt;</summary>
    
    
    
    <category term="数据库" scheme="https://www.sunliaodong.cn/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    <category term="MySQL" scheme="https://www.sunliaodong.cn/categories/MySQL/"/>
    
    
    <category term="MySQL" scheme="https://www.sunliaodong.cn/tags/MySQL/"/>
    
    <category term="事务日志" scheme="https://www.sunliaodong.cn/tags/%E4%BA%8B%E5%8A%A1%E6%97%A5%E5%BF%97/"/>
    
    <category term="redo" scheme="https://www.sunliaodong.cn/tags/redo/"/>
    
    <category term="undo" scheme="https://www.sunliaodong.cn/tags/undo/"/>
    
  </entry>
  
  <entry>
    <title>MySQL之日志-Binlog日志</title>
    <link href="https://www.sunliaodong.cn/2021/02/05/MySQL%E4%B9%8B%E6%97%A5%E5%BF%97-Binlog%E6%97%A5%E5%BF%97/"/>
    <id>https://www.sunliaodong.cn/2021/02/05/MySQL%E4%B9%8B%E6%97%A5%E5%BF%97-Binlog%E6%97%A5%E5%BF%97/</id>
    <published>2021-02-05T00:22:55.000Z</published>
    <updated>2021-02-05T00:37:44.317Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;记录信息&quot;&gt;&lt;a href=&quot;#记录信息&quot; class=&quot;headerlink&quot; title=&quot;记录信息&quot;&gt;&lt;/a&gt;记录信息&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;二进制日志记录 MySQL 数据库中所有与更新相关的操作，即二进制日志记录了所有的 DDL（数据定义语言）语句和 DML（数据操纵语言）语句，但是不包括数据查询语句。常用于恢复数据库和主从复制。&lt;/li&gt;
&lt;li&gt;二进制日志主要记录数据库的变化情况，因此可以用作主从库的同步。内容主要包括数据库所有的更新操作，use语句、insert语句、delete语句、update语句、create语句、alter语句、drop语句。用一句更简洁易懂的话概括就是：所有涉及数据变动的操作，都要记录进二进制日志中。&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;特性&quot;&gt;&lt;a href=&quot;#特性&quot; class=&quot;headerlink&quot; title=&quot;特性&quot;&gt;&lt;/a&gt;特性&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;只要重启了服务, binlog二进制日志就会自己滚动一个新的, 或者使用flush logs 手动滚动日志&lt;/li&gt;
&lt;li&gt;记录的信息 主要是记录修改数据或有可能引起数据改变的MySql语句, 记录时间,操作时长,等等信息&lt;/li&gt;
&lt;li&gt;日志格式: 基于(语句, row, mixed) 默认mixed&lt;/li&gt;
&lt;li&gt;每一个二进制日志叫做一个Binary log event(二进制日志事件), 每一个二进制日志事件都有自己的元数据(meta data)信息, 时间,操作时长….&lt;/li&gt;
&lt;li&gt;每个二进制日志的上限是1G&lt;/li&gt;&lt;/ol&gt;</summary>
    
    
    
    <category term="数据库" scheme="https://www.sunliaodong.cn/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    <category term="MySQL" scheme="https://www.sunliaodong.cn/categories/MySQL/"/>
    
    
    <category term="MySQL" scheme="https://www.sunliaodong.cn/tags/MySQL/"/>
    
    <category term="二进制日志" scheme="https://www.sunliaodong.cn/tags/%E4%BA%8C%E8%BF%9B%E5%88%B6%E6%97%A5%E5%BF%97/"/>
    
    <category term="Binlog日志" scheme="https://www.sunliaodong.cn/tags/Binlog%E6%97%A5%E5%BF%97/"/>
    
  </entry>
  
  <entry>
    <title>MySQL之日志-慢查询日志</title>
    <link href="https://www.sunliaodong.cn/2021/02/05/MySQL%E4%B9%8B%E6%97%A5%E5%BF%97-%E6%85%A2%E6%9F%A5%E8%AF%A2%E6%97%A5%E5%BF%97/"/>
    <id>https://www.sunliaodong.cn/2021/02/05/MySQL%E4%B9%8B%E6%97%A5%E5%BF%97-%E6%85%A2%E6%9F%A5%E8%AF%A2%E6%97%A5%E5%BF%97/</id>
    <published>2021-02-05T00:22:36.000Z</published>
    <updated>2021-02-05T00:26:43.125Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;说明&quot;&gt;&lt;a href=&quot;#说明&quot; class=&quot;headerlink&quot; title=&quot;说明&quot;&gt;&lt;/a&gt;说明&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;记录执行时间超过指定时间（long_query_time，默认10s）的查询语句（包括dml和ddl等）&lt;/li&gt;
&lt;li&gt;慢查询日志默认不启动&lt;/li&gt;
&lt;li&gt;慢查询日志支持将日志写入文件或数据库表中&lt;/li&gt;
&lt;li&gt;优点：可以有效的跟踪 执行时间过长 或者 没有使用索引的查询语句（包括select 语句，update语句，delete语句，以及insert语句）&lt;/li&gt;
&lt;li&gt;缺点：存在性能损耗，不建议默认开启&lt;/li&gt;
&lt;li&gt;慢查询日志只包含成功执行过的查询语句&lt;/li&gt;&lt;/ol&gt;</summary>
    
    
    
    <category term="数据库" scheme="https://www.sunliaodong.cn/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    <category term="MySQL" scheme="https://www.sunliaodong.cn/categories/MySQL/"/>
    
    
    <category term="MySQL" scheme="https://www.sunliaodong.cn/tags/MySQL/"/>
    
    <category term="慢查询日志" scheme="https://www.sunliaodong.cn/tags/%E6%85%A2%E6%9F%A5%E8%AF%A2%E6%97%A5%E5%BF%97/"/>
    
  </entry>
  
  <entry>
    <title>MySQL之日志-查询日志</title>
    <link href="https://www.sunliaodong.cn/2021/02/05/MySQL%E4%B9%8B%E6%97%A5%E5%BF%97-%E6%9F%A5%E8%AF%A2%E6%97%A5%E5%BF%97/"/>
    <id>https://www.sunliaodong.cn/2021/02/05/MySQL%E4%B9%8B%E6%97%A5%E5%BF%97-%E6%9F%A5%E8%AF%A2%E6%97%A5%E5%BF%97/</id>
    <published>2021-02-05T00:16:00.000Z</published>
    <updated>2021-02-05T00:21:25.054Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;说明&quot;&gt;&lt;a href=&quot;#说明&quot; class=&quot;headerlink&quot; title=&quot;说明&quot;&gt;&lt;/a&gt;说明&lt;/h2&gt;&lt;p&gt;默认情况下查询日志是关闭的。由于查询日志会记录用户的所有操作，其中还包含增删查改等信息，&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;insert查询为了避免数据冲突，如果此前插入过数据，而如果跟主键或唯一键的数据重复那肯定会报错&lt;/li&gt;
&lt;li&gt;update时也会查询因为更新的时候很可能会更新某一块数据&lt;/li&gt;
&lt;li&gt;delete查询，只删除符合条件的数据&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;MySQL普通查询日志记录MySQL服务实例所有的操作，如select、update、insert、delete等操作，无论该操作是否成功执行。还有MySQL客户机与MySQL服务端连接及断开的相关信息，无论连接成功还是失败。&lt;br&gt;注意：由于普通查询日志几乎记录了MySQL的所有操作，对于数据访问频繁的数据库服务器而言，如果开启MySQL的普通查询日志将会大幅度的降低数据库的性能，因此建议关闭普通查询日志。只有在特殊时期，如需要追踪某些特殊的查询日志，可以临时打开普通的查询日志。在并发操作大的环境下会产生大量的信息从而导致不必要的磁盘IO，会影响mysql的性能的。如若不是为了调试数据库的目的建议不要开启查询日志。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;log = on|off 是否开启日志功能, 这个设置包含了查询日志和慢查询日志&lt;/li&gt;
&lt;li&gt;general_log = on|off 是否开启查询日志&lt;/li&gt;
&lt;li&gt;general_log_file = /path/to/file 指定查询日志的位置&lt;/li&gt;
&lt;li&gt;log_output = FILE|table 日志输出的位置, 这个指令对慢查询日志也起作用&lt;/li&gt;&lt;/ol&gt;</summary>
    
    
    
    <category term="数据库" scheme="https://www.sunliaodong.cn/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    <category term="MySQL" scheme="https://www.sunliaodong.cn/categories/MySQL/"/>
    
    
    <category term="MySQL" scheme="https://www.sunliaodong.cn/tags/MySQL/"/>
    
    <category term="查询日志" scheme="https://www.sunliaodong.cn/tags/%E6%9F%A5%E8%AF%A2%E6%97%A5%E5%BF%97/"/>
    
  </entry>
  
  <entry>
    <title>MySQL之日志-错误日志</title>
    <link href="https://www.sunliaodong.cn/2021/02/05/MySQL%E4%B9%8B%E6%97%A5%E5%BF%97-%E9%94%99%E8%AF%AF%E6%97%A5%E5%BF%97/"/>
    <id>https://www.sunliaodong.cn/2021/02/05/MySQL%E4%B9%8B%E6%97%A5%E5%BF%97-%E9%94%99%E8%AF%AF%E6%97%A5%E5%BF%97/</id>
    <published>2021-02-05T00:15:49.000Z</published>
    <updated>2021-02-05T00:19:19.855Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;说明&quot;&gt;&lt;a href=&quot;#说明&quot; class=&quot;headerlink&quot; title=&quot;说明&quot;&gt;&lt;/a&gt;说明&lt;/h2&gt;&lt;p&gt;在mysql数据库中，错误日志功能是默认开启的。并且，错误日志无法被禁止。默认情况下，错误日志存储在mysql数据库的数据文件中。错误日志文件通常的名称为hostname.err。其中，hostname表示服务器主机名。&lt;br&gt;错误日志信息可以自己进行配置的，错误日志所记录的信息是可以通过log-error和log-warnings来定义的，其中log-err是定义是否启用错误日志的功能和错误日志的存储位置，log-warnings是定义是否将警告信息也定义至错误日志中。默认情况下错误日志大概记录以下几个方面的信息：服务器启动和关闭过程中的信息（未必是错误信息，如mysql如何启动InnoDB的表空间文件的、如何初始化自己的存储引擎的等等）、服务器运行过程中的错误信息、事件调度器运行一个事件时产生的信息、在从服务器上启动服务器进程时产生的信息。&lt;/p&gt;</summary>
    
    
    
    <category term="数据库" scheme="https://www.sunliaodong.cn/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    <category term="MySQL" scheme="https://www.sunliaodong.cn/categories/MySQL/"/>
    
    
    <category term="MySQL" scheme="https://www.sunliaodong.cn/tags/MySQL/"/>
    
    <category term="错误日志" scheme="https://www.sunliaodong.cn/tags/%E9%94%99%E8%AF%AF%E6%97%A5%E5%BF%97/"/>
    
  </entry>
  
  <entry>
    <title>MySQL之日志-概述</title>
    <link href="https://www.sunliaodong.cn/2021/02/05/MySQL%E4%B9%8B%E6%97%A5%E5%BF%97-%E6%A6%82%E8%BF%B0/"/>
    <id>https://www.sunliaodong.cn/2021/02/05/MySQL%E4%B9%8B%E6%97%A5%E5%BF%97-%E6%A6%82%E8%BF%B0/</id>
    <published>2021-02-05T00:00:45.000Z</published>
    <updated>2021-02-05T00:15:05.723Z</updated>
    
    
    <summary type="html">&lt;p&gt;日志是mysql数据库的重要组成部分。日志文件中记录着mysql数据库运行期间发生的变化；也就是说用来记录mysql数据库的客户端连接状况、SQL语句的执行情况和错误信息等。当数据库遭到意外的损坏时，可以通过日志查看文件出错的原因，并且可以通过日志文件进行数据恢复。  &lt;/p&gt;
&lt;p&gt;默认情况下，所有日志创建于mysqld数据目录中。通过刷新日志，你可以强制 mysqld来关闭和重新打开日志文件（或者在某些情况下切换到一个新的日志）。当你执行一个FLUSH LOGS语句或执行mysqladmin flush-logs或mysqladmin refresh时，出现日志刷新  &lt;/p&gt;
&lt;p&gt;mysql日志分类：错误日志、查询日志、慢查询日志、事务日志、二进制日志；  &lt;/p&gt;
&lt;p&gt;官网：&lt;a href=&quot;https://dev.mysql.com/doc/refman/5.7/en/server-logs.html&quot;&gt;https://dev.mysql.com/doc/refman/5.7/en/server-logs.html&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="数据库" scheme="https://www.sunliaodong.cn/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    <category term="MySQL" scheme="https://www.sunliaodong.cn/categories/MySQL/"/>
    
    
    <category term="MySQL" scheme="https://www.sunliaodong.cn/tags/MySQL/"/>
    
    <category term="日志" scheme="https://www.sunliaodong.cn/tags/%E6%97%A5%E5%BF%97/"/>
    
  </entry>
  
  <entry>
    <title>MySQL之show status详解</title>
    <link href="https://www.sunliaodong.cn/2021/02/04/MySQL%E4%B9%8Bshow-status%E8%AF%A6%E8%A7%A3/"/>
    <id>https://www.sunliaodong.cn/2021/02/04/MySQL%E4%B9%8Bshow-status%E8%AF%A6%E8%A7%A3/</id>
    <published>2021-02-04T12:49:05.000Z</published>
    <updated>2021-02-04T12:50:08.531Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;style type=&quot;text/css&quot;&gt;
.tg  {border-collapse:collapse;border-color:#bbb;border-spacing:0;}
.tg</summary>
        
      
    
    
    
    <category term="数据库" scheme="https://www.sunliaodong.cn/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    <category term="MySQL" scheme="https://www.sunliaodong.cn/categories/MySQL/"/>
    
    
    <category term="MySQL" scheme="https://www.sunliaodong.cn/tags/MySQL/"/>
    
    <category term="show status" scheme="https://www.sunliaodong.cn/tags/show-status/"/>
    
  </entry>
  
  <entry>
    <title>MySQL之高可用</title>
    <link href="https://www.sunliaodong.cn/2021/02/04/MySQL%E4%B9%8B%E9%AB%98%E5%8F%AF%E7%94%A8/"/>
    <id>https://www.sunliaodong.cn/2021/02/04/MySQL%E4%B9%8B%E9%AB%98%E5%8F%AF%E7%94%A8/</id>
    <published>2021-02-04T12:45:21.000Z</published>
    <updated>2021-02-04T12:47:59.487Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;互为主从复制&quot;&gt;&lt;a href=&quot;#互为主从复制&quot; class=&quot;headerlink&quot; title=&quot;互为主从复制&quot;&gt;&lt;/a&gt;互为主从复制&lt;/h2&gt;&lt;h3 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h3&gt;&lt;p&gt;在一些高可用的环境中，mysql的主从不能满足现实中的一些实际需求。比如，一些流量大的网站数据库访问有了瓶颈，需要负载均衡的时候就用两个或者多个的mysql服务器，而这些mysql服务器的数据库数据必须要保持一致，那么就会用到主主复制。  &lt;/p&gt;
&lt;p&gt;mysql主从架构中其实就一个主在工作，而从就相当于一个备份机器，从通过日志监测的方式来备份主库上的数据而保证主库的数据安全。在这种架构中如果从上的数据做了改变，主数据是不会用任何变化的。因为mysql主从架构主要是mysql从监控mysql主的日志变化来实现同步，相反的在这个架构中主并没有监控从的日志变化。所以，mysql从数据反生变化，主也就没有什么变化了。  &lt;/p&gt;
&lt;p&gt;通过上述描述，可以看到如果想实现主主复制，无非就是在mysql主从架构上让mysql主实现监测从的日志变化，从而实现两台机器相互同步。  &lt;/p&gt;</summary>
    
    
    
    <category term="数据库" scheme="https://www.sunliaodong.cn/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    <category term="MySQL" scheme="https://www.sunliaodong.cn/categories/MySQL/"/>
    
    <category term="高可用" scheme="https://www.sunliaodong.cn/categories/%E9%AB%98%E5%8F%AF%E7%94%A8/"/>
    
    
    <category term="MySQL" scheme="https://www.sunliaodong.cn/tags/MySQL/"/>
    
    <category term="高可用" scheme="https://www.sunliaodong.cn/tags/%E9%AB%98%E5%8F%AF%E7%94%A8/"/>
    
  </entry>
  
  <entry>
    <title>MySQL之备份与恢复</title>
    <link href="https://www.sunliaodong.cn/2021/02/04/MySQL%E4%B9%8B%E5%A4%87%E4%BB%BD%E4%B8%8E%E6%81%A2%E5%A4%8D/"/>
    <id>https://www.sunliaodong.cn/2021/02/04/MySQL%E4%B9%8B%E5%A4%87%E4%BB%BD%E4%B8%8E%E6%81%A2%E5%A4%8D/</id>
    <published>2021-02-04T12:43:21.000Z</published>
    <updated>2021-02-04T12:44:26.403Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;说明&quot;&gt;&lt;a href=&quot;#说明&quot; class=&quot;headerlink&quot; title=&quot;说明&quot;&gt;&lt;/a&gt;说明&lt;/h2&gt;&lt;h3 id=&quot;备份的目的&quot;&gt;&lt;a href=&quot;#备份的目的&quot; class=&quot;headerlink&quot; title=&quot;备份的目的&quot;&gt;&lt;/a&gt;备份的目的&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;做灾难恢复：对损坏的数据进行恢复和还原&lt;/li&gt;
&lt;li&gt;需求改变：因需求改变而需要把数据还原到改变以前&lt;/li&gt;
&lt;li&gt;测试：测试新功能是否可用&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;备份需要考虑的问题&quot;&gt;&lt;a href=&quot;#备份需要考虑的问题&quot; class=&quot;headerlink&quot; title=&quot;备份需要考虑的问题&quot;&gt;&lt;/a&gt;备份需要考虑的问题&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;可以容忍丢失多长时间的数据；&lt;/li&gt;
&lt;li&gt;恢复数据要在多长时间内完；&lt;/li&gt;
&lt;li&gt;恢复的时候是否需要持续提供服务；&lt;/li&gt;
&lt;li&gt;恢复的对象，是整个库，多个表，还是单个库，单个表。&lt;/li&gt;&lt;/ol&gt;</summary>
    
    
    
    <category term="数据库" scheme="https://www.sunliaodong.cn/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    <category term="MySQL" scheme="https://www.sunliaodong.cn/categories/MySQL/"/>
    
    
    <category term="MySQL" scheme="https://www.sunliaodong.cn/tags/MySQL/"/>
    
    <category term="备份" scheme="https://www.sunliaodong.cn/tags/%E5%A4%87%E4%BB%BD/"/>
    
    <category term="恢复" scheme="https://www.sunliaodong.cn/tags/%E6%81%A2%E5%A4%8D/"/>
    
  </entry>
  
  <entry>
    <title>MySQL之优化技巧</title>
    <link href="https://www.sunliaodong.cn/2021/02/04/MySQL%E4%B9%8B%E4%BC%98%E5%8C%96%E6%8A%80%E5%B7%A7/"/>
    <id>https://www.sunliaodong.cn/2021/02/04/MySQL%E4%B9%8B%E4%BC%98%E5%8C%96%E6%8A%80%E5%B7%A7/</id>
    <published>2021-02-04T12:41:07.000Z</published>
    <updated>2021-02-04T12:42:42.648Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;优化技巧&quot;&gt;&lt;a href=&quot;#优化技巧&quot; class=&quot;headerlink&quot; title=&quot;优化技巧&quot;&gt;&lt;/a&gt;优化技巧&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;配置文件的快速查找&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/usr/libexec/mysqld --verbose --&lt;span class=&quot;built_in&quot;&gt;help&lt;/span&gt;|grep -A 1 &lt;span class=&quot;string&quot;&gt;&amp;#x27;Default options&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;200815 16:01:04 [Note] Plugin &lt;span class=&quot;string&quot;&gt;&amp;#x27;FEEDBACK&amp;#x27;&lt;/span&gt; is disabled.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Default options are &lt;span class=&quot;built_in&quot;&gt;read&lt;/span&gt; from the following files &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; the given order:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/etc/mysql/my.cnf /etc/my.cnf ~/.my.cnf&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;配置项使用小写，单词之间使用横线或下划线分隔，并且使用统一的规范&lt;/li&gt;
&lt;li&gt;作用域：全局、会话、对象&lt;/li&gt;&lt;/ol&gt;</summary>
    
    
    
    <category term="数据库" scheme="https://www.sunliaodong.cn/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    <category term="MySQL" scheme="https://www.sunliaodong.cn/categories/MySQL/"/>
    
    <category term="调优" scheme="https://www.sunliaodong.cn/categories/%E8%B0%83%E4%BC%98/"/>
    
    
    <category term="MySQL" scheme="https://www.sunliaodong.cn/tags/MySQL/"/>
    
    <category term="调优" scheme="https://www.sunliaodong.cn/tags/%E8%B0%83%E4%BC%98/"/>
    
  </entry>
  
  <entry>
    <title>MySQL之配置文件</title>
    <link href="https://www.sunliaodong.cn/2021/02/04/MySQL%E4%B9%8B%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/"/>
    <id>https://www.sunliaodong.cn/2021/02/04/MySQL%E4%B9%8B%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/</id>
    <published>2021-02-04T12:39:18.000Z</published>
    <updated>2021-02-04T12:40:27.873Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;下面是72GB内存生产环境中my.cnf配置文件，读者可以作为一个优化参考：&lt;/p&gt;
&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span</summary>
        
      
    
    
    
    <category term="数据库" scheme="https://www.sunliaodong.cn/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    <category term="MySQL" scheme="https://www.sunliaodong.cn/categories/MySQL/"/>
    
    
    <category term="MySQL" scheme="https://www.sunliaodong.cn/tags/MySQL/"/>
    
    <category term="配置文件" scheme="https://www.sunliaodong.cn/tags/%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>MySQL之账户管理</title>
    <link href="https://www.sunliaodong.cn/2021/02/04/MySQL%E4%B9%8B%E8%B4%A6%E6%88%B7%E7%AE%A1%E7%90%86/"/>
    <id>https://www.sunliaodong.cn/2021/02/04/MySQL%E4%B9%8B%E8%B4%A6%E6%88%B7%E7%AE%A1%E7%90%86/</id>
    <published>2021-02-04T12:35:57.000Z</published>
    <updated>2021-02-04T12:37:52.344Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;Mysql账户体系&quot;&gt;&lt;a href=&quot;#Mysql账户体系&quot; class=&quot;headerlink&quot; title=&quot;Mysql账户体系&quot;&gt;&lt;/a&gt;Mysql账户体系&lt;/h2&gt;&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;mysql&lt;span class=&quot;operator&quot;&gt;&amp;gt;&lt;/span&gt; use mysql;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mysql&lt;span class=&quot;operator&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;show&lt;/span&gt; tables;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;operator&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;---------------------------+&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;operator&quot;&gt;|&lt;/span&gt; Tables_in_mysql           &lt;span class=&quot;operator&quot;&gt;|&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;operator&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;---------------------------+&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;operator&quot;&gt;|&lt;/span&gt; columns_priv              &lt;span class=&quot;operator&quot;&gt;|&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;operator&quot;&gt;|&lt;/span&gt; db                        &lt;span class=&quot;operator&quot;&gt;|&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;operator&quot;&gt;|&lt;/span&gt; procs_priv                &lt;span class=&quot;operator&quot;&gt;|&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;operator&quot;&gt;|&lt;/span&gt; proxies_priv              &lt;span class=&quot;operator&quot;&gt;|&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;operator&quot;&gt;|&lt;/span&gt; tables_priv               &lt;span class=&quot;operator&quot;&gt;|&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;user&lt;/span&gt;                      &lt;span class=&quot;operator&quot;&gt;|&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;operator&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;---------------------------+&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;31&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;rows&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;set&lt;/span&gt; (&lt;span class=&quot;number&quot;&gt;0.00&lt;/span&gt; sec)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="数据库" scheme="https://www.sunliaodong.cn/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    <category term="MySQL" scheme="https://www.sunliaodong.cn/categories/MySQL/"/>
    
    
    <category term="MySQL" scheme="https://www.sunliaodong.cn/tags/MySQL/"/>
    
    <category term="账户管理" scheme="https://www.sunliaodong.cn/tags/%E8%B4%A6%E6%88%B7%E7%AE%A1%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>Java系统化学习之集合概述</title>
    <link href="https://www.sunliaodong.cn/2021/02/04/Java%E7%B3%BB%E7%BB%9F%E5%8C%96%E5%AD%A6%E4%B9%A0%E4%B9%8B%E9%9B%86%E5%90%88%E6%A6%82%E8%BF%B0/"/>
    <id>https://www.sunliaodong.cn/2021/02/04/Java%E7%B3%BB%E7%BB%9F%E5%8C%96%E5%AD%A6%E4%B9%A0%E4%B9%8B%E9%9B%86%E5%90%88%E6%A6%82%E8%BF%B0/</id>
    <published>2021-02-04T12:19:31.000Z</published>
    <updated>2021-02-04T12:31:34.035Z</updated>
    
    
    <summary type="html">&lt;p&gt;使用集合需要考虑几个关注点：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;线程安全性&lt;/li&gt;
&lt;li&gt;是否有序&lt;/li&gt;
&lt;li&gt;是否重复&lt;/li&gt;
&lt;li&gt;关注查询还是关注写入&lt;/li&gt;
&lt;li&gt;equals和hashCode方法的重写需要同步&lt;/li&gt;
&lt;li&gt;使用接口返回集合数据&lt;/li&gt;&lt;/ol&gt;</summary>
    
    
    
    <category term="Java" scheme="https://www.sunliaodong.cn/categories/Java/"/>
    
    
    <category term="Java" scheme="https://www.sunliaodong.cn/tags/Java/"/>
    
    <category term="集合" scheme="https://www.sunliaodong.cn/tags/%E9%9B%86%E5%90%88/"/>
    
  </entry>
  
  <entry>
    <title>Java系统化学习之HashMap</title>
    <link href="https://www.sunliaodong.cn/2021/02/04/Java%E7%B3%BB%E7%BB%9F%E5%8C%96%E5%AD%A6%E4%B9%A0%E4%B9%8BHashMap/"/>
    <id>https://www.sunliaodong.cn/2021/02/04/Java%E7%B3%BB%E7%BB%9F%E5%8C%96%E5%AD%A6%E4%B9%A0%E4%B9%8BHashMap/</id>
    <published>2021-02-04T12:08:50.000Z</published>
    <updated>2021-02-04T12:17:19.164Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;HashMap是一种使用&lt;strong&gt;数组+链表+红黑树&lt;/strong&gt;数据结构实现的Map&lt;/li&gt;
&lt;li&gt;HashMap 根据键的 hashCode 值存储数据，大多数情况下可以直接定位到它的值，因而具有很快的访问速度，但遍历顺序不确定。&lt;/li&gt;
&lt;li&gt;HashMap只允许一个key为null，允许多个value为null&lt;/li&gt;
&lt;li&gt;HashMap 非线程安全，可以用 Collections 的 synchronizedMap 方法使 HashMap 具有线程安全的能力，或者使用 ConcurrentHashMap。&lt;/li&gt;&lt;/ol&gt;</summary>
    
    
    
    <category term="Java" scheme="https://www.sunliaodong.cn/categories/Java/"/>
    
    <category term="源码分析" scheme="https://www.sunliaodong.cn/categories/%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/"/>
    
    
    <category term="Java" scheme="https://www.sunliaodong.cn/tags/Java/"/>
    
    <category term="集合" scheme="https://www.sunliaodong.cn/tags/%E9%9B%86%E5%90%88/"/>
    
    <category term="HashMap" scheme="https://www.sunliaodong.cn/tags/HashMap/"/>
    
  </entry>
  
  <entry>
    <title>Java系统化学习之Type</title>
    <link href="https://www.sunliaodong.cn/2021/02/04/Java%E7%B3%BB%E7%BB%9F%E5%8C%96%E5%AD%A6%E4%B9%A0%E4%B9%8BType/"/>
    <id>https://www.sunliaodong.cn/2021/02/04/Java%E7%B3%BB%E7%BB%9F%E5%8C%96%E5%AD%A6%E4%B9%A0%E4%B9%8BType/</id>
    <published>2021-02-04T11:06:39.000Z</published>
    <updated>2021-02-04T11:08:12.975Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h2&gt;&lt;p&gt;这里的Type指java.lang.reflect.Type, 是Java中所有类型的公共高级接口, 代表了Java中的所有类型. Type体系中类型的包括：数组类型(GenericArrayType)、参数化类型(ParameterizedType)、类型变量(TypeVariable)、通配符类型(WildcardType)、原始类型(Class)、基本类型(Class), 以上这些类型都实现Type接口.  &lt;/p&gt;
&lt;p&gt;Type 表示的全部类型而每个Class对象表示一个具体类型的实例，如String.class仅代表String类型。由此看来Type与 Class 表示类型几乎是相同的（Class实现接口Type），只不过 Type表示的范围比Class要广得多而已。当然Type还有其他子类。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;参数化类型（ParameterizedType）：有原始类型和具体的类型参数，泛型List&lt;String&gt;、Map；&lt;/String&gt;&lt;/li&gt;
&lt;li&gt;数组类型（GenericArrayType）：不是数组String[] 、byte[]，而是带有泛型的数组，即T[] ；&lt;/li&gt;
&lt;li&gt;通配符类型（WildcardType）： 指的是&amp;lt;?&amp;gt;, &amp;lt;? extends T&amp;gt;等等&lt;/li&gt;
&lt;li&gt;原始类型（Class）： 不仅仅包含我们平常所指的类，还包括枚举、数组、注解等；&lt;/li&gt;
&lt;li&gt;基本类型（Class）, 也就是我们所说的java的基本类型，即int,float,double等&lt;/li&gt;
&lt;li&gt;类型变量(TypeVariable)：表示类型参数，可以有上界，比如：T extends Number&lt;/li&gt;&lt;/ol&gt;</summary>
    
    
    
    <category term="Java" scheme="https://www.sunliaodong.cn/categories/Java/"/>
    
    <category term="源码分析" scheme="https://www.sunliaodong.cn/categories/%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/"/>
    
    
    <category term="Java" scheme="https://www.sunliaodong.cn/tags/Java/"/>
    
    <category term="Type" scheme="https://www.sunliaodong.cn/tags/Type/"/>
    
    <category term="反射" scheme="https://www.sunliaodong.cn/tags/%E5%8F%8D%E5%B0%84/"/>
    
  </entry>
  
  <entry>
    <title>Java系统化学习之String</title>
    <link href="https://www.sunliaodong.cn/2021/02/04/Java%E7%B3%BB%E7%BB%9F%E5%8C%96%E5%AD%A6%E4%B9%A0%E4%B9%8BString/"/>
    <id>https://www.sunliaodong.cn/2021/02/04/Java%E7%B3%BB%E7%BB%9F%E5%8C%96%E5%AD%A6%E4%B9%A0%E4%B9%8BString/</id>
    <published>2021-02-04T11:00:22.000Z</published>
    <updated>2021-02-04T11:05:47.575Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;String介绍&quot;&gt;&lt;a href=&quot;#String介绍&quot; class=&quot;headerlink&quot; title=&quot;String介绍&quot;&gt;&lt;/a&gt;String介绍&lt;/h2&gt;&lt;h3 id=&quot;API描述&quot;&gt;&lt;a href=&quot;#API描述&quot; class=&quot;headerlink&quot; title=&quot;API描述&quot;&gt;&lt;/a&gt;API描述&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;在&lt;code&gt;java.lang.String&lt;/code&gt;的源码中明确说明，&lt;code&gt;String&lt;/code&gt;类表示字符串，Java中所有的字符串传字面值（如：”abc”）都是该类的实例；并且字符串是常量，一旦创建之后则不可以改变，String buffers支持可变的字符串。因为&lt;code&gt;String&lt;/code&gt;对象是不可变的，但是可以共享。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt; * The &amp;#123;&lt;span class=&quot;meta&quot;&gt;@code&lt;/span&gt; String&amp;#125; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;represents&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;character&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;strings&lt;/span&gt;. &lt;span class=&quot;title&quot;&gt;All&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt; * &lt;span class=&quot;title&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;literals&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Java&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;programs&lt;/span&gt;, &lt;span class=&quot;title&quot;&gt;such&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;as&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;span class=&quot;meta&quot;&gt;@code&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;abc&amp;quot;&lt;/span&gt;&amp;#125;, are&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * implemented as instances of &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt; class.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * &amp;lt;p&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * Strings are constant; their values cannot be changed after they&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * are created. String buffers support mutable strings.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * Because String objects are immutable they can be shared.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;String&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;java&lt;/span&gt;.&lt;span class=&quot;title&quot;&gt;io&lt;/span&gt;.&lt;span class=&quot;title&quot;&gt;Serializable&lt;/span&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;    &lt;span class=&quot;title&quot;&gt;Comparable&lt;/span&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;String&lt;/span&gt;&amp;gt;, &lt;span class=&quot;title&quot;&gt;CharSequence&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;通过API定义总结以下信息：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;使用final修饰，则不能被继承（该类中的成员方法默认都是final）&lt;/li&gt;
&lt;li&gt;实现接口&lt;code&gt;Serializable&lt;/code&gt;，说明可以进行序列化&lt;/li&gt;
&lt;li&gt;实现接口&lt;code&gt;Comparable&lt;/code&gt;,说明可以大小比较&lt;/li&gt;
&lt;li&gt;实现接口&lt;code&gt;CharSequence&lt;/code&gt;,说明String本身就是char类型的数组，而且通过成员变量定义可以进行佐证&lt;/li&gt;
&lt;li&gt;通过char字符数组实现&lt;/li&gt;&lt;/ol&gt;</summary>
    
    
    
    <category term="Java" scheme="https://www.sunliaodong.cn/categories/Java/"/>
    
    <category term="源码分析" scheme="https://www.sunliaodong.cn/categories/%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/"/>
    
    
    <category term="Java" scheme="https://www.sunliaodong.cn/tags/Java/"/>
    
    <category term="String" scheme="https://www.sunliaodong.cn/tags/String/"/>
    
  </entry>
  
  <entry>
    <title>Java系统化学习之传递方式</title>
    <link href="https://www.sunliaodong.cn/2021/02/04/Java%E7%B3%BB%E7%BB%9F%E5%8C%96%E5%AD%A6%E4%B9%A0%E4%B9%8B%E4%BC%A0%E9%80%92%E6%96%B9%E5%BC%8F/"/>
    <id>https://www.sunliaodong.cn/2021/02/04/Java%E7%B3%BB%E7%BB%9F%E5%8C%96%E5%AD%A6%E4%B9%A0%E4%B9%8B%E4%BC%A0%E9%80%92%E6%96%B9%E5%BC%8F/</id>
    <published>2021-02-04T10:56:04.000Z</published>
    <updated>2021-02-04T10:57:55.674Z</updated>
    
    
    <summary type="html">&lt;p&gt;在Java中的方法调用使用的都是&lt;strong&gt;值传递&lt;/strong&gt;，Java 中的所有自变量或参数传递都是通过传递句柄进行的。也就是说，当我们传递“一个对象”时，&lt;strong&gt;实际传递的只是指向位于方法外部的那个对象的“一个句柄”&lt;/strong&gt;。所以一旦要对那个句柄进行任何修改，便相当于修改外部对象。此外：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;■参数传递过程中会自动产生别名问题&lt;/li&gt;
&lt;li&gt;■不存在本地对象，只有本地句柄&lt;/li&gt;
&lt;li&gt;■句柄有自己的作用域，而对象没有&lt;/li&gt;
&lt;li&gt;■对象的“存在时间”在 Java 里不是个问题&lt;/li&gt;
&lt;li&gt;■没有语言上的支持（如常量）可防止对象被修改（以避免别名的副作用）&lt;/li&gt;&lt;/ol&gt;</summary>
    
    
    
    <category term="Java" scheme="https://www.sunliaodong.cn/categories/Java/"/>
    
    
    <category term="Java" scheme="https://www.sunliaodong.cn/tags/Java/"/>
    
    <category term="传递方式" scheme="https://www.sunliaodong.cn/tags/%E4%BC%A0%E9%80%92%E6%96%B9%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>Java系统化学习之克隆</title>
    <link href="https://www.sunliaodong.cn/2021/02/04/Java%E7%B3%BB%E7%BB%9F%E5%8C%96%E5%AD%A6%E4%B9%A0%E4%B9%8B%E5%85%8B%E9%9A%86/"/>
    <id>https://www.sunliaodong.cn/2021/02/04/Java%E7%B3%BB%E7%BB%9F%E5%8C%96%E5%AD%A6%E4%B9%A0%E4%B9%8B%E5%85%8B%E9%9A%86/</id>
    <published>2021-02-04T10:49:16.000Z</published>
    <updated>2021-02-04T10:50:17.212Z</updated>
    
    
    <summary type="html">&lt;p&gt;所谓克隆就是对原有对象复用的复用，&lt;strong&gt;Java语言中克隆针对的是类的实例（对象）&lt;/strong&gt;，在Java中一共有三种方式实现。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;直接赋值&lt;/li&gt;
&lt;li&gt;浅拷贝&lt;/li&gt;
&lt;li&gt;深拷贝&lt;/li&gt;&lt;/ol&gt;</summary>
    
    
    
    <category term="Java" scheme="https://www.sunliaodong.cn/categories/Java/"/>
    
    
    <category term="Java" scheme="https://www.sunliaodong.cn/tags/Java/"/>
    
    <category term="clone" scheme="https://www.sunliaodong.cn/tags/clone/"/>
    
    <category term="克隆" scheme="https://www.sunliaodong.cn/tags/%E5%85%8B%E9%9A%86/"/>
    
  </entry>
  
</feed>
