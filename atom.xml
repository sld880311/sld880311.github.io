<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>一蓑烟雨任平生</title>
  
  <subtitle>个人成长日记</subtitle>
  <link href="https://www.sunliaodong.cn/atom.xml" rel="self"/>
  
  <link href="https://www.sunliaodong.cn/"/>
  <updated>2021-03-12T03:25:55.905Z</updated>
  <id>https://www.sunliaodong.cn/</id>
  
  <author>
    <name>Theodore Sun</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Linux PageCache详解</title>
    <link href="https://www.sunliaodong.cn/2021/03/11/Linux-PageCache%E8%AF%A6%E8%A7%A3/"/>
    <id>https://www.sunliaodong.cn/2021/03/11/Linux-PageCache%E8%AF%A6%E8%A7%A3/</id>
    <published>2021-03-11T02:01:42.000Z</published>
    <updated>2021-03-12T03:25:55.905Z</updated>
    
    
    <summary type="html">&lt;p&gt;应用程序要存储或访问数据时，只需读或者写”文件”的一维地址空间即可，而这个地址空间与存储设备上存储块之间的对应关系则由操作系统维护。说白了，文件就是基于内核态Page Cache的一层抽象。&lt;/p&gt;</summary>
    
    
    
    <category term="Linux" scheme="https://www.sunliaodong.cn/categories/Linux/"/>
    
    
    <category term="Linux" scheme="https://www.sunliaodong.cn/tags/Linux/"/>
    
    <category term="文件系统" scheme="https://www.sunliaodong.cn/tags/%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="PageCache" scheme="https://www.sunliaodong.cn/tags/PageCache/"/>
    
  </entry>
  
  <entry>
    <title>道德经</title>
    <link href="https://www.sunliaodong.cn/2021/03/10/%E9%81%93%E5%BE%B7%E7%BB%8F/"/>
    <id>https://www.sunliaodong.cn/2021/03/10/%E9%81%93%E5%BE%B7%E7%BB%8F/</id>
    <published>2021-03-10T00:38:21.000Z</published>
    <updated>2021-03-15T02:32:44.787Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;01-天地之始，万物之母&quot;&gt;&lt;a href=&quot;#01-天地之始，万物之母&quot; class=&quot;headerlink&quot; title=&quot;01 天地之始，万物之母&quot;&gt;&lt;/a&gt;01 天地之始，万物之母&lt;/h2&gt;&lt;blockquote class=&quot;blockquote-center&quot;&gt;
            &lt;i class=&quot;fa fa-quote-left&quot;&gt;&lt;/i&gt;
            &lt;p&gt;道可道，非常道；&lt;br&gt;名可名，非常名。&lt;br&gt;无，名天地之始；&lt;br&gt;有，名万物之母。&lt;br&gt;故常无，欲以观其妙；&lt;br&gt;常有，欲以观其徼。&lt;br&gt;此两者，同出而异名，同谓之玄。&lt;br&gt;玄之又玄，众妙之门。&lt;/p&gt;

            &lt;i class=&quot;fa fa-quote-right&quot;&gt;&lt;/i&gt;
          &lt;/blockquote&gt;</summary>
    
    
    
    <category term="文学" scheme="https://www.sunliaodong.cn/categories/%E6%96%87%E5%AD%A6/"/>
    
    
    <category term="道德经" scheme="https://www.sunliaodong.cn/tags/%E9%81%93%E5%BE%B7%E7%BB%8F/"/>
    
  </entry>
  
  <entry>
    <title>InfluxDB深入学习之自身监控</title>
    <link href="https://www.sunliaodong.cn/2021/03/03/InfluxDB%E6%B7%B1%E5%85%A5%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%87%AA%E8%BA%AB%E7%9B%91%E6%8E%A7/"/>
    <id>https://www.sunliaodong.cn/2021/03/03/InfluxDB%E6%B7%B1%E5%85%A5%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%87%AA%E8%BA%AB%E7%9B%91%E6%8E%A7/</id>
    <published>2021-03-03T06:20:37.000Z</published>
    <updated>2021-03-12T02:41:07.707Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;常用监控脚本&quot;&gt;&lt;a href=&quot;#常用监控脚本&quot; class=&quot;headerlink&quot; title=&quot;常用监控脚本&quot;&gt;&lt;/a&gt;常用监控脚本&lt;/h2&gt;&lt;h3 id=&quot;series&quot;&gt;&lt;a href=&quot;#series&quot; class=&quot;headerlink&quot; title=&quot;series&quot;&gt;&lt;/a&gt;series&lt;/h3&gt;&lt;p&gt;Series会被索引且存在内存中，如果量太大会对资源造成过多损耗，且查询效率也得不到保障。 &lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;influx -database &lt;span class=&quot;string&quot;&gt;&amp;#x27;telegraf&amp;#x27;&lt;/span&gt; -execute &lt;span class=&quot;string&quot;&gt;&amp;#x27;show series&amp;#x27;&lt;/span&gt; -format &lt;span class=&quot;string&quot;&gt;&amp;#x27;csv&amp;#x27;&lt;/span&gt;|wc -l&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;或者使用如下sql：&lt;/p&gt;
&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;operator&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;FROM&lt;/span&gt; &amp;quot;database&amp;quot; &lt;span class=&quot;keyword&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;time&lt;/span&gt; &lt;span class=&quot;operator&quot;&gt;&amp;gt;&lt;/span&gt; now() &lt;span class=&quot;operator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;m &lt;span class=&quot;keyword&quot;&gt;and&lt;/span&gt; &amp;quot;database&amp;quot;&lt;span class=&quot;operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&amp;#x27;telegraf&amp;#x27;&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;order&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;by&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;time&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;desc&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;tag-values&quot;&gt;&lt;a href=&quot;#tag-values&quot; class=&quot;headerlink&quot; title=&quot;tag values&quot;&gt;&lt;/a&gt;tag values&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;influx -database &lt;span class=&quot;string&quot;&gt;&amp;#x27;telegraf&amp;#x27;&lt;/span&gt; -execute &lt;span class=&quot;string&quot;&gt;&amp;#x27;SHOW TAG VALUES FROM cpu WITH KEY = cpu&amp;#x27;&lt;/span&gt; -format &lt;span class=&quot;string&quot;&gt;&amp;#x27;csv&amp;#x27;&lt;/span&gt;|wc -l&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;每秒写数据量&quot;&gt;&lt;a href=&quot;#每秒写数据量&quot; class=&quot;headerlink&quot; title=&quot;每秒写数据量&quot;&gt;&lt;/a&gt;每秒写数据量&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;influx -execute &lt;span class=&quot;string&quot;&gt;&amp;#x27;select derivative(pointReq, 1s) from &amp;quot;write&amp;quot; where time &amp;gt; now() - 5m&amp;#x27;&lt;/span&gt; -database &lt;span class=&quot;string&quot;&gt;&amp;#x27;_internal&amp;#x27;&lt;/span&gt; -precision &lt;span class=&quot;string&quot;&gt;&amp;#x27;rfc3339&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="数据库" scheme="https://www.sunliaodong.cn/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    <category term="InfluxDB" scheme="https://www.sunliaodong.cn/categories/InfluxDB/"/>
    
    
    <category term="InfluxDB" scheme="https://www.sunliaodong.cn/tags/InfluxDB/"/>
    
  </entry>
  
  <entry>
    <title>分布式协议之ZAB</title>
    <link href="https://www.sunliaodong.cn/2021/03/03/%E5%88%86%E5%B8%83%E5%BC%8F%E5%8D%8F%E8%AE%AE%E4%B9%8BZAB/"/>
    <id>https://www.sunliaodong.cn/2021/03/03/%E5%88%86%E5%B8%83%E5%BC%8F%E5%8D%8F%E8%AE%AE%E4%B9%8BZAB/</id>
    <published>2021-03-03T06:15:12.000Z</published>
    <updated>2021-03-03T06:15:12.196Z</updated>
    
    
    
    
    <category term="其他" scheme="https://www.sunliaodong.cn/categories/%E5%85%B6%E4%BB%96/"/>
    
    
    <category term="Java" scheme="https://www.sunliaodong.cn/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>分布式算法之Paxos</title>
    <link href="https://www.sunliaodong.cn/2021/03/03/%E5%88%86%E5%B8%83%E5%BC%8F%E7%AE%97%E6%B3%95%E4%B9%8BPaxos/"/>
    <id>https://www.sunliaodong.cn/2021/03/03/%E5%88%86%E5%B8%83%E5%BC%8F%E7%AE%97%E6%B3%95%E4%B9%8BPaxos/</id>
    <published>2021-03-03T06:14:38.000Z</published>
    <updated>2021-03-03T07:49:03.521Z</updated>
    
    
    <summary type="html">&lt;p&gt;解决的问题是一个分布式系统如何就某个值（决议）&lt;strong&gt;达成一致（共识问题）&lt;/strong&gt;。&lt;br&gt;一个典型的场景是，在一个分布式数据库系统中，如果各节点的初始状态一致，每个节点执行相同的操作序列，那么他们最后能得到一个一致的状态。为保证每个节点执行相同的命令序列，需要在每一条指令上执行一个“一致性算法”以保证每个节点看到的指令一致。&lt;/p&gt;</summary>
    
    
    
    <category term="分布式" scheme="https://www.sunliaodong.cn/categories/%E5%88%86%E5%B8%83%E5%BC%8F/"/>
    
    <category term="算法" scheme="https://www.sunliaodong.cn/categories/%E7%AE%97%E6%B3%95/"/>
    
    
    <category term="Paxos" scheme="https://www.sunliaodong.cn/tags/Paxos/"/>
    
  </entry>
  
  <entry>
    <title>分布式算法之Raft</title>
    <link href="https://www.sunliaodong.cn/2021/03/03/%E5%88%86%E5%B8%83%E5%BC%8F%E7%AE%97%E6%B3%95%E4%B9%8BRaft/"/>
    <id>https://www.sunliaodong.cn/2021/03/03/%E5%88%86%E5%B8%83%E5%BC%8F%E7%AE%97%E6%B3%95%E4%B9%8BRaft/</id>
    <published>2021-03-03T06:14:14.000Z</published>
    <updated>2021-03-03T06:14:14.684Z</updated>
    
    
    
    
    <category term="其他" scheme="https://www.sunliaodong.cn/categories/%E5%85%B6%E4%BB%96/"/>
    
    
    <category term="Java" scheme="https://www.sunliaodong.cn/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>分布式理论</title>
    <link href="https://www.sunliaodong.cn/2021/03/03/%E5%88%86%E5%B8%83%E5%BC%8F%E7%90%86%E8%AE%BA/"/>
    <id>https://www.sunliaodong.cn/2021/03/03/%E5%88%86%E5%B8%83%E5%BC%8F%E7%90%86%E8%AE%BA/</id>
    <published>2021-03-03T06:14:01.000Z</published>
    <updated>2021-03-09T02:19:31.763Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;CAP&quot;&gt;&lt;a href=&quot;#CAP&quot; class=&quot;headerlink&quot; title=&quot;CAP&quot;&gt;&lt;/a&gt;CAP&lt;/h2&gt;&lt;h3 id=&quot;Consistency（一致性）&quot;&gt;&lt;a href=&quot;#Consistency（一致性）&quot; class=&quot;headerlink&quot; title=&quot;Consistency（一致性）&quot;&gt;&lt;/a&gt;Consistency（一致性）&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;在分布式系统中的所有数据备份，在同一时刻是否同样的值&lt;/li&gt;
&lt;li&gt;所有节点访问同一份最新的数据副本&lt;/li&gt;
&lt;li&gt;强调数据的正确性，对于客户端而言，每次都能读取到最新写入的数据&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;Availability（可用性）&quot;&gt;&lt;a href=&quot;#Availability（可用性）&quot; class=&quot;headerlink&quot; title=&quot;Availability（可用性）&quot;&gt;&lt;/a&gt;Availability（可用性）&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;在集群中一部分节点故障后，集群整体是否还能响应客户端的读写请求。（对数据更新具备高可用性）&lt;/li&gt;
&lt;li&gt;强调服务可用，但是不保证数据正确&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;Partition-tolerance（分区容错性）&quot;&gt;&lt;a href=&quot;#Partition-tolerance（分区容错性）&quot; class=&quot;headerlink&quot; title=&quot;Partition tolerance（分区容错性）&quot;&gt;&lt;/a&gt;Partition tolerance（分区容错性）&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;以实际效果而言，分区相当于对&lt;strong&gt;通信&lt;/strong&gt;的时限要求&lt;/li&gt;
&lt;li&gt;系统如果不能在时限内达成数据一致性，就意味着发生了分区的情况，必须就当前操作在 C 和 A 之间做出选择。&lt;/li&gt;
&lt;li&gt;强调的是集群对分区故障的容错能力&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;可用性和分区容错性的区别&quot;&gt;&lt;a href=&quot;#可用性和分区容错性的区别&quot; class=&quot;headerlink&quot; title=&quot;可用性和分区容错性的区别&quot;&gt;&lt;/a&gt;可用性和分区容错性的区别&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;可用性：节点出现故障时，系统可用&lt;/li&gt;
&lt;li&gt;分区容错性：网络出现问题时，系统可用&lt;/li&gt;
&lt;/ol&gt;</summary>
    
    
    
    <category term="分布式" scheme="https://www.sunliaodong.cn/categories/%E5%88%86%E5%B8%83%E5%BC%8F/"/>
    
    
    <category term="cap" scheme="https://www.sunliaodong.cn/tags/cap/"/>
    
    <category term="base" scheme="https://www.sunliaodong.cn/tags/base/"/>
    
    <category term="acid" scheme="https://www.sunliaodong.cn/tags/acid/"/>
    
  </entry>
  
  <entry>
    <title>算法之布隆过滤器</title>
    <link href="https://www.sunliaodong.cn/2021/03/03/%E7%AE%97%E6%B3%95%E4%B9%8B%E5%B8%83%E9%9A%86%E8%BF%87%E6%BB%A4%E5%99%A8/"/>
    <id>https://www.sunliaodong.cn/2021/03/03/%E7%AE%97%E6%B3%95%E4%B9%8B%E5%B8%83%E9%9A%86%E8%BF%87%E6%BB%A4%E5%99%A8/</id>
    <published>2021-03-03T06:01:39.000Z</published>
    <updated>2021-03-03T06:22:01.558Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h2&gt;&lt;p&gt;如果想判断一个元素是不是在一个集合里，一般想到的是将集合中所有元素保存起来，然后通过比较确定。链表、树、散列表（又叫哈希表，Hash table）等等数据结构都是这种思路，存储位置要么是磁盘，要么是内存。很多时候要么是以时间换空间，要么是以空间换时间。  &lt;/p&gt;
&lt;p&gt;在响应时间要求比较严格的情况下，如果我们存在内里，那么随着集合中元素的增加，我们需要的存储空间越来越大，以及检索的时间越来越长，导致内存开销太大、时间效率变低。  &lt;/p&gt;
&lt;p&gt;此时需要考虑解决的问题就是，&lt;strong&gt;在数据量比较大的情况下，既满足时间要求，又满足空间的要求&lt;/strong&gt;。即我们需要一个时间和空间消耗都比较小的数据结构和算法。Bloom Filter就是一种解决方案。&lt;/p&gt;</summary>
    
    
    
    <category term="分布式" scheme="https://www.sunliaodong.cn/categories/%E5%88%86%E5%B8%83%E5%BC%8F/"/>
    
    <category term="算法" scheme="https://www.sunliaodong.cn/categories/%E7%AE%97%E6%B3%95/"/>
    
    
    <category term="算法" scheme="https://www.sunliaodong.cn/tags/%E7%AE%97%E6%B3%95/"/>
    
    <category term="布隆过滤器" scheme="https://www.sunliaodong.cn/tags/%E5%B8%83%E9%9A%86%E8%BF%87%E6%BB%A4%E5%99%A8/"/>
    
  </entry>
  
  <entry>
    <title>JVM垃圾收集器与内存分配策略</title>
    <link href="https://www.sunliaodong.cn/2021/02/18/JVM%E5%9E%83%E5%9C%BE%E6%94%B6%E9%9B%86%E5%99%A8%E4%B8%8E%E5%86%85%E5%AD%98%E5%88%86%E9%85%8D%E7%AD%96%E7%95%A5/"/>
    <id>https://www.sunliaodong.cn/2021/02/18/JVM%E5%9E%83%E5%9C%BE%E6%94%B6%E9%9B%86%E5%99%A8%E4%B8%8E%E5%86%85%E5%AD%98%E5%88%86%E9%85%8D%E7%AD%96%E7%95%A5/</id>
    <published>2021-02-18T03:19:49.000Z</published>
    <updated>2021-03-03T02:17:39.097Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;对象已死&quot;&gt;&lt;a href=&quot;#对象已死&quot; class=&quot;headerlink&quot; title=&quot;对象已死&quot;&gt;&lt;/a&gt;对象已死&lt;/h2&gt;&lt;h3 id=&quot;引用计数算法（reference-counting）&quot;&gt;&lt;a href=&quot;#引用计数算法（reference-counting）&quot; class=&quot;headerlink&quot; title=&quot;引用计数算法（reference-counting）&quot;&gt;&lt;/a&gt;引用计数算法（reference-counting）&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;定义&lt;/strong&gt;：在对象中添加一个引用计数器，每当有一个地方引用它时，计数器值就加一；当引用失效时，计数器值就减一；任何时刻计数器为零的对象就是不可能再被使用的。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;缺点&lt;/strong&gt;：无法简单的处理对象循环引用&lt;/p&gt;
&lt;div align=&quot;center&quot;&gt;

&lt;img src=&quot;/2021/02/18/JVM%E5%9E%83%E5%9C%BE%E6%94%B6%E9%9B%86%E5%99%A8%E4%B8%8E%E5%86%85%E5%AD%98%E5%88%86%E9%85%8D%E7%AD%96%E7%95%A5/%E5%BC%95%E7%94%A8%E8%AE%A1%E7%AE%97%E7%AE%97%E6%B3%95.png&quot; class title=&quot;引用计算算法&quot;&gt;

&lt;/div&gt;

&lt;h3 id=&quot;可达性算法（GC-Roots-Tracing）&quot;&gt;&lt;a href=&quot;#可达性算法（GC-Roots-Tracing）&quot; class=&quot;headerlink&quot; title=&quot;可达性算法（GC Roots Tracing）&quot;&gt;&lt;/a&gt;可达性算法（GC Roots Tracing）&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;定义&lt;/strong&gt;：通过一系列称为“GC Roots”的根对象作为起始节点集，从这些节点开始，根据引用关系向下搜索，搜索过程所走过的路径称为“引用链”（Reference Chain），如果某个对象到GC Roots间没有任何引用链相连，或者用图论的话来说就是从GC Roots到这个对象不可达时，则证明此对象是不可能再被使用的。&lt;/p&gt;</summary>
    
    
    
    <category term="Java" scheme="https://www.sunliaodong.cn/categories/Java/"/>
    
    <category term="JVM" scheme="https://www.sunliaodong.cn/categories/JVM/"/>
    
    
    <category term="Java" scheme="https://www.sunliaodong.cn/tags/Java/"/>
    
    <category term="垃圾收集器" scheme="https://www.sunliaodong.cn/tags/%E5%9E%83%E5%9C%BE%E6%94%B6%E9%9B%86%E5%99%A8/"/>
    
    <category term="内存分配策略" scheme="https://www.sunliaodong.cn/tags/%E5%86%85%E5%AD%98%E5%88%86%E9%85%8D%E7%AD%96%E7%95%A5/"/>
    
  </entry>
  
  <entry>
    <title>MySQL之查询性能优化</title>
    <link href="https://www.sunliaodong.cn/2021/02/17/MySQL%E4%B9%8B%E6%9F%A5%E8%AF%A2%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96/"/>
    <id>https://www.sunliaodong.cn/2021/02/17/MySQL%E4%B9%8B%E6%9F%A5%E8%AF%A2%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96/</id>
    <published>2021-02-17T03:05:51.000Z</published>
    <updated>2021-03-19T09:37:55.522Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;查询速度慢的原因&quot;&gt;&lt;a href=&quot;#查询速度慢的原因&quot; class=&quot;headerlink&quot; title=&quot;查询速度慢的原因&quot;&gt;&lt;/a&gt;查询速度慢的原因&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;生命周期太长：从客户端到服务端，然后在服务端进行解析、生成执行计划、执行（包括数据的分组聚合处理等）、并返回结果&lt;/li&gt;
&lt;li&gt;资源消耗：网络资源、CPU资源、锁等待、IO资源&lt;/li&gt;
&lt;li&gt;访问的数据太多，大多数是行数据，也包括列数据&lt;ul&gt;
&lt;li&gt;是否向数据库请求了不需要的数据&lt;ul&gt;
&lt;li&gt;查询不需要的数据，比如&lt;code&gt;LIMIT 1000000,10&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;是否返回了全部列，比如&lt;code&gt;select * from &lt;/code&gt;&lt;/li&gt;
&lt;li&gt;重复查询相同的数据，可以使用缓存解决&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;MySQL是否在扫描额外的记录，可以使用&lt;code&gt;explain&lt;/code&gt;分析，关注以下三个指标&lt;ul&gt;
&lt;li&gt;响应时间&lt;ul&gt;
&lt;li&gt; 服务时间：数据库处理这个查询实际消耗的时间&lt;/li&gt;
&lt;li&gt; 排队时间：等待时间，比如IO操作、锁等待等&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;扫描的行数&lt;ul&gt;
&lt;li&gt; 通过&lt;code&gt;explain&lt;/code&gt;中的&lt;code&gt;type&lt;/code&gt;列获取访问类型（全表扫描、范围扫描、唯一索引查询、常数引用等）&lt;/li&gt;
&lt;li&gt;使用where条件的方式&lt;ul&gt;
&lt;li&gt; 在索引中使用where过滤数据，存储引擎层完成&lt;/li&gt;
&lt;li&gt; 索引覆盖扫描（Extra中出现Using index），服务层直接在索引中处理，不需要回表&lt;/li&gt;
&lt;li&gt; 冲数据表中返回数据（Extra中出现Using index），服务层完成（先从数据库中获取数据，然后在过滤数据）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;返回的行数&lt;ul&gt;
&lt;li&gt;优化技巧（扫描比返回的数据多）&lt;ul&gt;
&lt;li&gt; 使用索引覆盖扫描&lt;/li&gt;
&lt;li&gt; 修改表结构&lt;/li&gt;
&lt;li&gt; 重新SQL&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ol&gt;</summary>
    
    
    
    <category term="数据库" scheme="https://www.sunliaodong.cn/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    <category term="MySQL" scheme="https://www.sunliaodong.cn/categories/MySQL/"/>
    
    <category term="调优" scheme="https://www.sunliaodong.cn/categories/%E8%B0%83%E4%BC%98/"/>
    
    
    <category term="MySQL" scheme="https://www.sunliaodong.cn/tags/MySQL/"/>
    
    <category term="查询性能优化" scheme="https://www.sunliaodong.cn/tags/%E6%9F%A5%E8%AF%A2%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>MySQL之原理分析-排序</title>
    <link href="https://www.sunliaodong.cn/2021/02/14/MySQL%E4%B9%8B%E5%8E%9F%E7%90%86%E5%88%86%E6%9E%90-%E6%8E%92%E5%BA%8F/"/>
    <id>https://www.sunliaodong.cn/2021/02/14/MySQL%E4%B9%8B%E5%8E%9F%E7%90%86%E5%88%86%E6%9E%90-%E6%8E%92%E5%BA%8F/</id>
    <published>2021-02-14T14:47:57.000Z</published>
    <updated>2021-02-18T00:19:33.292Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;排序算法&quot;&gt;&lt;a href=&quot;#排序算法&quot; class=&quot;headerlink&quot; title=&quot;排序算法&quot;&gt;&lt;/a&gt;排序算法&lt;/h2&gt;&lt;div align=&quot;center&quot;&gt;

&lt;img src=&quot;/2021/02/14/MySQL%E4%B9%8B%E5%8E%9F%E7%90%86%E5%88%86%E6%9E%90-%E6%8E%92%E5%BA%8F/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95.jpg&quot; class title=&quot;常用排序算法&quot;&gt;

&lt;/div&gt;

&lt;h2 id=&quot;sort-buffer-size&quot;&gt;&lt;a href=&quot;#sort-buffer-size&quot; class=&quot;headerlink&quot; title=&quot;sort_buffer_size&quot;&gt;&lt;/a&gt;sort_buffer_size&lt;/h2&gt;&lt;h3 id=&quot;sort-buffer-size的特点&quot;&gt;&lt;a href=&quot;#sort-buffer-size的特点&quot; class=&quot;headerlink&quot; title=&quot;sort_buffer_size的特点&quot;&gt;&lt;/a&gt;sort_buffer_size的特点&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;每个线程都会分配一个固定的大小，作为排序的buffer&lt;/li&gt;
&lt;li&gt;默认256KB，线程独有&lt;/li&gt;
&lt;li&gt;使用场景：排序比较大，且内存充足、并发不大时，可以适当增加该值，如果太大会耗尽内存（例如：500个连接将会消耗 500*sort_buffer_size(8M)=4G内存）&lt;/li&gt;
&lt;li&gt;connection级别的参数，在每个connection（session）第一次需要使用这个buffer的时候，一次性分配设置的内存&lt;/li&gt;
&lt;li&gt;内存分配方式：超过2KB的时候，就会使用mmap() 而不是 malloc() 来进行内存分配，导致效率降低&lt;/li&gt;
&lt;li&gt;调优检查：explain select*from table where order limit；出现filesort（外部排序）&lt;/li&gt;
&lt;/ol&gt;</summary>
    
    
    
    <category term="数据库" scheme="https://www.sunliaodong.cn/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    <category term="MySQL" scheme="https://www.sunliaodong.cn/categories/MySQL/"/>
    
    
    <category term="MySQL" scheme="https://www.sunliaodong.cn/tags/MySQL/"/>
    
    <category term="语法分析" scheme="https://www.sunliaodong.cn/tags/%E8%AF%AD%E6%B3%95%E5%88%86%E6%9E%90/"/>
    
    <category term="排序" scheme="https://www.sunliaodong.cn/tags/%E6%8E%92%E5%BA%8F/"/>
    
    <category term="order by" scheme="https://www.sunliaodong.cn/tags/order-by/"/>
    
  </entry>
  
  <entry>
    <title>Java并发编程之应用-设备升级</title>
    <link href="https://www.sunliaodong.cn/2021/02/08/Java%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B%E4%B9%8B%E5%BA%94%E7%94%A8-%E8%AE%BE%E5%A4%87%E5%8D%87%E7%BA%A7/"/>
    <id>https://www.sunliaodong.cn/2021/02/08/Java%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B%E4%B9%8B%E5%BA%94%E7%94%A8-%E8%AE%BE%E5%A4%87%E5%8D%87%E7%BA%A7/</id>
    <published>2021-02-08T06:42:59.000Z</published>
    <updated>2021-02-08T06:44:30.130Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h2&gt;&lt;p&gt;功能需求：设备策略升级  &lt;/p&gt;
&lt;p&gt;详细描述：用户可以不定期的创建1条策略来升级选择的多个设备从a版本到b版本  &lt;/p&gt;
&lt;div align=&quot;center&quot;&gt;

&lt;img src=&quot;/2021/02/08/Java%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B%E4%B9%8B%E5%BA%94%E7%94%A8-%E8%AE%BE%E5%A4%87%E5%8D%87%E7%BA%A7/1588229421629.png&quot; class&gt;

&lt;/div&gt;</summary>
    
    
    
    <category term="Java" scheme="https://www.sunliaodong.cn/categories/Java/"/>
    
    <category term="并发编程" scheme="https://www.sunliaodong.cn/categories/%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/"/>
    
    <category term="Java线程池" scheme="https://www.sunliaodong.cn/categories/Java%E7%BA%BF%E7%A8%8B%E6%B1%A0/"/>
    
    <category term="源码分析" scheme="https://www.sunliaodong.cn/categories/%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/"/>
    
    
    <category term="Java" scheme="https://www.sunliaodong.cn/tags/Java/"/>
    
    <category term="线程池" scheme="https://www.sunliaodong.cn/tags/%E7%BA%BF%E7%A8%8B%E6%B1%A0/"/>
    
  </entry>
  
  <entry>
    <title>Java并发编程之阻塞队列</title>
    <link href="https://www.sunliaodong.cn/2021/02/08/Java%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B%E4%B9%8B%E9%98%BB%E5%A1%9E%E9%98%9F%E5%88%97/"/>
    <id>https://www.sunliaodong.cn/2021/02/08/Java%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B%E4%B9%8B%E9%98%BB%E5%A1%9E%E9%98%9F%E5%88%97/</id>
    <published>2021-02-08T06:38:55.000Z</published>
    <updated>2021-02-18T00:19:33.281Z</updated>
    
    
    <summary type="html">&lt;p&gt;阻塞队列，关键字是阻塞，先理解阻塞的含义，在阻塞队列中，线程阻塞有这样的两种情况：&lt;br&gt;    当队列中没有数据的情况下，消费者端的所有线程都会被自动阻塞（挂起），直到有数据放入队列。 &lt;/p&gt;
&lt;div align=&quot;center&quot;&gt;

&lt;img src=&quot;/2021/02/08/Java%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B%E4%B9%8B%E9%98%BB%E5%A1%9E%E9%98%9F%E5%88%97/1589104874399.png&quot; class&gt;

&lt;/div&gt;</summary>
    
    
    
    <category term="Java" scheme="https://www.sunliaodong.cn/categories/Java/"/>
    
    <category term="并发编程" scheme="https://www.sunliaodong.cn/categories/%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/"/>
    
    <category term="源码分析" scheme="https://www.sunliaodong.cn/categories/%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/"/>
    
    
    <category term="Java" scheme="https://www.sunliaodong.cn/tags/Java/"/>
    
    <category term="阻塞队列" scheme="https://www.sunliaodong.cn/tags/%E9%98%BB%E5%A1%9E%E9%98%9F%E5%88%97/"/>
    
    <category term="ArrayBlockingQueue" scheme="https://www.sunliaodong.cn/tags/ArrayBlockingQueue/"/>
    
    <category term="LinkedBlockingQueue" scheme="https://www.sunliaodong.cn/tags/LinkedBlockingQueue/"/>
    
    <category term="PriorityBlockingQueue" scheme="https://www.sunliaodong.cn/tags/PriorityBlockingQueue/"/>
    
    <category term="DelayQueue" scheme="https://www.sunliaodong.cn/tags/DelayQueue/"/>
    
    <category term="SynchronousQueue" scheme="https://www.sunliaodong.cn/tags/SynchronousQueue/"/>
    
    <category term="LinkedTransferQueue" scheme="https://www.sunliaodong.cn/tags/LinkedTransferQueue/"/>
    
    <category term="LinkedBlockingDeque" scheme="https://www.sunliaodong.cn/tags/LinkedBlockingDeque/"/>
    
  </entry>
  
  <entry>
    <title>MYSQL之数据类型与Schema</title>
    <link href="https://www.sunliaodong.cn/2021/02/08/MYSQL%E4%B9%8B%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E4%B8%8ESchema/"/>
    <id>https://www.sunliaodong.cn/2021/02/08/MYSQL%E4%B9%8B%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E4%B8%8ESchema/</id>
    <published>2021-02-08T05:52:44.000Z</published>
    <updated>2021-02-18T00:19:33.292Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;选择优化的数据类型&quot;&gt;&lt;a href=&quot;#选择优化的数据类型&quot; class=&quot;headerlink&quot; title=&quot;选择优化的数据类型&quot;&gt;&lt;/a&gt;选择优化的数据类型&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;更小的通常更好&lt;/li&gt;
&lt;li&gt;简单就好&lt;/li&gt;
&lt;li&gt;尽量避免使用NULL&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;数值类型&quot;&gt;&lt;a href=&quot;#数值类型&quot; class=&quot;headerlink&quot; title=&quot;数值类型&quot;&gt;&lt;/a&gt;数值类型&lt;/h3&gt;&lt;p&gt;在mysql中的数值类型主要包括：整数和实数。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;在mysql中可以指定整数类型的宽度，但是该宽度只是用来显示可展示的长度，不能作为限制类型的实际长度&lt;/li&gt;
&lt;li&gt;mysql中支持精确类型的实数和非精确类型的实数，需要根据实际场景进行选择，也可以根据业务场景转换成BIGINT进行存储&lt;br&gt;具体类型如下表所示：&lt;/li&gt;&lt;/ol&gt;</summary>
    
    
    
    <category term="数据库" scheme="https://www.sunliaodong.cn/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    <category term="MySQL" scheme="https://www.sunliaodong.cn/categories/MySQL/"/>
    
    
    <category term="MySQL" scheme="https://www.sunliaodong.cn/tags/MySQL/"/>
    
    <category term="数据类型" scheme="https://www.sunliaodong.cn/tags/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/"/>
    
  </entry>
  
  <entry>
    <title>Java并发编程之线程控制手段</title>
    <link href="https://www.sunliaodong.cn/2021/02/08/Java%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B%E4%B9%8B%E7%BA%BF%E7%A8%8B%E6%8E%A7%E5%88%B6%E6%89%8B%E6%AE%B5/"/>
    <id>https://www.sunliaodong.cn/2021/02/08/Java%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B%E4%B9%8B%E7%BA%BF%E7%A8%8B%E6%8E%A7%E5%88%B6%E6%89%8B%E6%AE%B5/</id>
    <published>2021-02-08T00:43:55.000Z</published>
    <updated>2021-02-18T00:19:33.253Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;CountDownLatch&quot;&gt;&lt;a href=&quot;#CountDownLatch&quot; class=&quot;headerlink&quot; title=&quot;CountDownLatch&quot;&gt;&lt;/a&gt;CountDownLatch&lt;/h2&gt;&lt;div align=&quot;center&quot;&gt;

&lt;img src=&quot;/2021/02/08/Java%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B%E4%B9%8B%E7%BA%BF%E7%A8%8B%E6%8E%A7%E5%88%B6%E6%89%8B%E6%AE%B5/1591538272733.png&quot; class title=&quot;CountDownLatch类图&quot;&gt;

&lt;/div&gt;</summary>
    
    
    
    <category term="Java" scheme="https://www.sunliaodong.cn/categories/Java/"/>
    
    <category term="并发编程" scheme="https://www.sunliaodong.cn/categories/%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/"/>
    
    <category term="源码分析" scheme="https://www.sunliaodong.cn/categories/%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/"/>
    
    
    <category term="Java" scheme="https://www.sunliaodong.cn/tags/Java/"/>
    
    <category term="线程控制手段" scheme="https://www.sunliaodong.cn/tags/%E7%BA%BF%E7%A8%8B%E6%8E%A7%E5%88%B6%E6%89%8B%E6%AE%B5/"/>
    
    <category term="CountDownLatch" scheme="https://www.sunliaodong.cn/tags/CountDownLatch/"/>
    
    <category term="CyclicBarrier" scheme="https://www.sunliaodong.cn/tags/CyclicBarrier/"/>
    
    <category term="Semaphore" scheme="https://www.sunliaodong.cn/tags/Semaphore/"/>
    
  </entry>
  
  <entry>
    <title>Java并发编程之StampedLock</title>
    <link href="https://www.sunliaodong.cn/2021/02/08/Java%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B%E4%B9%8BStampedLock/"/>
    <id>https://www.sunliaodong.cn/2021/02/08/Java%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B%E4%B9%8BStampedLock/</id>
    <published>2021-02-08T00:30:46.000Z</published>
    <updated>2021-02-08T00:43:01.622Z</updated>
    
    
    <summary type="html">&lt;p&gt;读写锁的改进。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;锁&lt;/th&gt;
&lt;th&gt;并发度&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;ReentrantLock&lt;/td&gt;
&lt;td&gt;读读互斥、读写互斥、写写互斥&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ReentrantReadWriteLock&lt;/td&gt;
&lt;td&gt;读读不互斥、读写互斥、写写互斥&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;StampedLock&lt;/td&gt;
&lt;td&gt;读读不互斥、读写不互斥、写写互斥&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;</summary>
    
    
    
    <category term="Java" scheme="https://www.sunliaodong.cn/categories/Java/"/>
    
    <category term="并发编程" scheme="https://www.sunliaodong.cn/categories/%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/"/>
    
    <category term="源码分析" scheme="https://www.sunliaodong.cn/categories/%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/"/>
    
    
    <category term="Java" scheme="https://www.sunliaodong.cn/tags/Java/"/>
    
    <category term="锁" scheme="https://www.sunliaodong.cn/tags/%E9%94%81/"/>
    
    <category term="StampedLock" scheme="https://www.sunliaodong.cn/tags/StampedLock/"/>
    
  </entry>
  
  <entry>
    <title>Java并发编程之ReentrantReadWriteLock</title>
    <link href="https://www.sunliaodong.cn/2021/02/08/Java%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B%E4%B9%8BReentrantReadWriteLock/"/>
    <id>https://www.sunliaodong.cn/2021/02/08/Java%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B%E4%B9%8BReentrantReadWriteLock/</id>
    <published>2021-02-08T00:30:22.000Z</published>
    <updated>2021-02-08T00:41:51.661Z</updated>
    
    
    <summary type="html">&lt;div align=&quot;center&quot;&gt;

&lt;img src=&quot;/2021/02/08/Java%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B%E4%B9%8BReentrantReadWriteLock/1591534830113.png&quot; class title=&quot;类图&quot;&gt;

&lt;/div&gt;</summary>
    
    
    
    <category term="Java" scheme="https://www.sunliaodong.cn/categories/Java/"/>
    
    <category term="并发编程" scheme="https://www.sunliaodong.cn/categories/%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/"/>
    
    <category term="源码分析" scheme="https://www.sunliaodong.cn/categories/%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/"/>
    
    
    <category term="Java" scheme="https://www.sunliaodong.cn/tags/Java/"/>
    
    <category term="锁" scheme="https://www.sunliaodong.cn/tags/%E9%94%81/"/>
    
    <category term="ReentrantReadWriteLock" scheme="https://www.sunliaodong.cn/tags/ReentrantReadWriteLock/"/>
    
  </entry>
  
  <entry>
    <title>Java并发编程之CAS</title>
    <link href="https://www.sunliaodong.cn/2021/02/08/Java%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B%E4%B9%8BCAS/"/>
    <id>https://www.sunliaodong.cn/2021/02/08/Java%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B%E4%B9%8BCAS/</id>
    <published>2021-02-08T00:29:45.000Z</published>
    <updated>2021-02-08T00:40:22.502Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;无锁的优点（效率高的原因）&quot;&gt;&lt;a href=&quot;#无锁的优点（效率高的原因）&quot; class=&quot;headerlink&quot; title=&quot;无锁的优点（效率高的原因）&quot;&gt;&lt;/a&gt;无锁的优点（效率高的原因）&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;不会出现上下文切换&lt;/li&gt;
&lt;li&gt;需要额外CPU的支持&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;CAS特点&quot;&gt;&lt;a href=&quot;#CAS特点&quot; class=&quot;headerlink&quot; title=&quot;CAS特点&quot;&gt;&lt;/a&gt;CAS特点&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;结合CAS+volatile可以实现无锁并发。&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;场景：线程数少、多核 CPU 的场景下&lt;/li&gt;
&lt;li&gt;CAS基于乐观锁实现思路，synchronized基于悲观锁的思路&lt;/li&gt;
&lt;li&gt;CAS 体现的是无锁并发、无阻塞并发（竞争不激烈的前提下）&lt;/li&gt;
&lt;li&gt;概念：Compare And Swap/Set，3 个参数 CAS(V,E,N)。V 表示要更新的变量(内存值)，E 表示预期值(旧的)，N 表示新值。当且仅当 V 值等于 E 值时，才会将 V 的值设为 N，如果 V 值和 E 值不同，则说明已经有其他线程做了更新，则当前线程什么都不做。最后，CAS 返回当前 V 的真实值。&lt;/li&gt;&lt;/ol&gt;</summary>
    
    
    
    <category term="Java" scheme="https://www.sunliaodong.cn/categories/Java/"/>
    
    <category term="并发编程" scheme="https://www.sunliaodong.cn/categories/%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/"/>
    
    <category term="源码分析" scheme="https://www.sunliaodong.cn/categories/%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/"/>
    
    
    <category term="Java" scheme="https://www.sunliaodong.cn/tags/Java/"/>
    
    <category term="CAS" scheme="https://www.sunliaodong.cn/tags/CAS/"/>
    
    <category term="锁" scheme="https://www.sunliaodong.cn/tags/%E9%94%81/"/>
    
  </entry>
  
  <entry>
    <title>Java并发编程之AQS</title>
    <link href="https://www.sunliaodong.cn/2021/02/08/Java%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B%E4%B9%8BAQS/"/>
    <id>https://www.sunliaodong.cn/2021/02/08/Java%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B%E4%B9%8BAQS/</id>
    <published>2021-02-08T00:29:38.000Z</published>
    <updated>2021-02-18T00:19:33.248Z</updated>
    
    
    <summary type="html">&lt;p&gt;&lt;font color=&quot;red&quot;&gt;AQS是实现同步器的基础组件，并发包中锁的底层实现就是使用AQS来完成的&lt;/font&gt;&lt;/p&gt;
&lt;h2 id=&quot;原理结构&quot;&gt;&lt;a href=&quot;#原理结构&quot; class=&quot;headerlink&quot; title=&quot;原理结构&quot;&gt;&lt;/a&gt;原理结构&lt;/h2&gt;&lt;div align=&quot;center&quot;&gt;

&lt;img src=&quot;/2021/02/08/Java%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B%E4%B9%8BAQS/1589109265967.png&quot; class title=&quot;AQS原理结构图&quot;&gt;

&lt;/div&gt;</summary>
    
    
    
    <category term="Java" scheme="https://www.sunliaodong.cn/categories/Java/"/>
    
    <category term="并发编程" scheme="https://www.sunliaodong.cn/categories/%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/"/>
    
    <category term="源码分析" scheme="https://www.sunliaodong.cn/categories/%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/"/>
    
    
    <category term="Java" scheme="https://www.sunliaodong.cn/tags/Java/"/>
    
    <category term="AbstractQueuedSynchronizer" scheme="https://www.sunliaodong.cn/tags/AbstractQueuedSynchronizer/"/>
    
    <category term="AQS" scheme="https://www.sunliaodong.cn/tags/AQS/"/>
    
    <category term="模板模式" scheme="https://www.sunliaodong.cn/tags/%E6%A8%A1%E6%9D%BF%E6%A8%A1%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>Java并发编程之ReentrantLock</title>
    <link href="https://www.sunliaodong.cn/2021/02/08/Java%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B%E4%B9%8BReentrantLock/"/>
    <id>https://www.sunliaodong.cn/2021/02/08/Java%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B%E4%B9%8BReentrantLock/</id>
    <published>2021-02-08T00:29:29.000Z</published>
    <updated>2021-02-08T00:49:18.253Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;特点&quot;&gt;&lt;a href=&quot;#特点&quot; class=&quot;headerlink&quot; title=&quot;特点&quot;&gt;&lt;/a&gt;特点&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;继承接口Lock，一种可重入锁&lt;/li&gt;
&lt;li&gt;完成synchronized所能的工作&lt;/li&gt;
&lt;li&gt;提供诸如可&lt;strong&gt;响应中断锁、可轮询锁请求、定时锁&lt;/strong&gt;等避免多线程死锁的方法&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;等待可中断（可设置超时时间）&lt;/strong&gt;：当持有锁的线程长期不释放锁的时候，正在等待的线程可以选择放弃等待，改为处理其他事情。可中断特性对处理执行时间非常长的同步块很有帮助。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;公平锁&lt;/strong&gt;：多个线程在等待同一个锁时，必须按照申请锁的时间顺序来依次获得锁；而非公平锁则不保证这一点，在锁被释放时，任何一个等待锁的线程都有机会获得锁。synchronized中的锁是非公平的，ReentrantLock在默认情况下也是非公平的，但可以通过带布尔值的构造函数要求使用公平锁。不过一旦使用了公平锁，将会导致ReentrantLock的性能急剧下降，会明显影响吞吐量。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;锁绑定多个条件&lt;/strong&gt;：一个ReentrantLock对象可以同时绑定多个Condition对象。在synchronized中，锁对象的wait()跟它的notify()或者notifyAll()方法配合可以实现一个隐含的条件，如果要和多于一个的条件关联的时候，就不得不额外添加一个锁；而ReentrantLock则无须这样做，多次调用newCondition()方法即可。&lt;/li&gt;&lt;/ol&gt;</summary>
    
    
    
    <category term="Java" scheme="https://www.sunliaodong.cn/categories/Java/"/>
    
    <category term="并发编程" scheme="https://www.sunliaodong.cn/categories/%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/"/>
    
    <category term="源码分析" scheme="https://www.sunliaodong.cn/categories/%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/"/>
    
    
    <category term="Java" scheme="https://www.sunliaodong.cn/tags/Java/"/>
    
    <category term="锁" scheme="https://www.sunliaodong.cn/tags/%E9%94%81/"/>
    
    <category term="ReentrantLock" scheme="https://www.sunliaodong.cn/tags/ReentrantLock/"/>
    
  </entry>
  
</feed>
